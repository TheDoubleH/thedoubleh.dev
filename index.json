[{"categories":[],"content":"See what events I will be attending.","date":"Tuesday, Nov 7, 2023","objectID":"/meetme/","series":[],"tags":["events","speaking"],"title":"Come Meet Me","uri":"/meetme/"},{"categories":[],"content":" Meet MeAfter being in attendee in several conferences in the NAV / Business Central World for a decade or two, Luc Van Vugt asked me to co-present with him. That lead me to talk about 10 Myths about test automation on customer projects at Directions EMEA in October 2023 in Lyon, France. Shorty after coming home to Los Angeles, CA I submitted a session for Dynamics CON Live, and was encouraged to submit additional sessions. Thankfully after some conversations with Brad Prendergast (aka @dvlprlife) we ended up getting two sessions approved. That is how it started. hopefully I will see you at some of the events. Checkout my Sessionnize profile here! ","date":"Tuesday, Nov 7, 2023","objectID":"/meetme/:0:0","series":[],"tags":["events","speaking"],"title":"Come Meet Me","uri":"/meetme/#meet-me"},{"categories":[],"content":" EventsThese are the events, where i have spoken - or will speak. ","date":"Tuesday, Nov 7, 2023","objectID":"/meetme/:1:0","series":[],"tags":["events","speaking"],"title":"Come Meet Me","uri":"/meetme/#events"},{"categories":[],"content":" SessionsThese are the sessions, I have presented or co-presented, Please feel free to reach out, if You would like to have me present or are interested in any of the subjects. ","date":"Tuesday, Nov 7, 2023","objectID":"/meetme/:2:0","series":[],"tags":["events","speaking"],"title":"Come Meet Me","uri":"/meetme/#sessions"},{"categories":[],"content":" Dynamics CornerI had the pleasure and honor of being invited to join Kris and Brad on their Dynamics Corner. We talked Tesla, NAV and Business Central - and about being a dinosaur, that believes that Just because You can, doesn‚Äôt mean you should! Read more about this episode on the Dynamics Corner Website or watch the episode here: ","date":"Tuesday, Jul 18, 2023","objectID":"/posts/i-am-almost-famous/:1:0","series":[],"tags":[],"title":"I Am Almost Famous","uri":"/posts/i-am-almost-famous/#dynamics-corner"},{"categories":[],"content":" People Mentioned Kristoffer Ruyeras Co-Host of Dynamics Corner Podcast Brad Co-Host of Dynamics Corner Podcast ","date":"Tuesday, Jul 18, 2023","objectID":"/posts/i-am-almost-famous/:2:0","series":[],"tags":[],"title":"I Am Almost Famous","uri":"/posts/i-am-almost-famous/#people-mentioned"},{"categories":["Development"],"content":" It started with a tweetAt the end of March I finally convinced myself, that I DO have some things to share for the Developers in our little world. I submitted a session for BcTechDays. as of today, I do not know if our session have been accepted or not, but no matter not, I will be in Antwerp. With a little bit of butterflies in my stomach, I finally submitted a session for @BCTechDays. @SorenKlemmensen and I would like to talk about giving the user a chance to succeed. I'll be in Antwerp whether the session is accepted or not, though! pic.twitter.com/Vek5r97AT6 ‚Äî Henrik Helgesen ü§∑‚Äç‚ôÇÔ∏è (@TheDoubleH) March 28, 2022 ","date":"Tuesday, Apr 26, 2022","objectID":"/posts/i-am-presenting-a-webinar/:1:0","series":[],"tags":["webinar","speaking"],"title":"I Am Presenting a Webinar","uri":"/posts/i-am-presenting-a-webinar/#it-started-with-a-tweet"},{"categories":["Development"],"content":" It‚Äôs timeShortly after I announced on twitter that I had submitted a session, the guys at Areopa reached out to me, and asked me if I would be willing to share a few nuggest in their webinar series. Having watched quite a few of their sessions, I know I have some big shoes to fill, but I agreed. As someone with over 20 years in this world, it really is time for me to step up and share more of my knowledge. ","date":"Tuesday, Apr 26, 2022","objectID":"/posts/i-am-presenting-a-webinar/:2:0","series":[],"tags":["webinar","speaking"],"title":"I Am Presenting a Webinar","uri":"/posts/i-am-presenting-a-webinar/#its-time"},{"categories":["Development"],"content":" The Webinar Give the user a chance When: Tuesday, May 24 2022 at 7am (Pacific time) | 16:00 (Central European time). Where: Online Webinar. As a Developer it can be difficult to know how a user may interact with your new feature. Many times, development works ‚Äúwhen I try‚Äù, but with a slight difference in data or flow, and things can look a lot different. Business Central have different ways You, as a developer, can help your users; Visual indicators, error messages and standards are all things that You should take into account, when building apps for Business Central. Presenter: Henrik Helgesen Moderator: Luc van Vugt Sign up here ","date":"Tuesday, Apr 26, 2022","objectID":"/posts/i-am-presenting-a-webinar/:3:0","series":[],"tags":["webinar","speaking"],"title":"I Am Presenting a Webinar","uri":"/posts/i-am-presenting-a-webinar/#the-webinar"},{"categories":["Development","Design","Job Queue"],"content":" Perception is RealityAs a Magic Lover and member of the World-Famous Magic Castle in Hollywood, California, I have taken some classes in the art of conjuring. In Magic we often rely on the fact, that Perception is Reality. That is - If People perceive a fact, then it must be so! The same is true when it comes to users using NAV or Business Central! Over the years, I have often heard people complaining about slow systems, and while in many cases, there are low hanging fruits that can resolve the issues, there are also often times a different approach to the whole thing: Change the User Experience! ","date":"Monday, Jan 3, 2022","objectID":"/posts/performancevsexperience/:1:0","series":[],"tags":[],"title":"Performance vs User-Experience","uri":"/posts/performancevsexperience/#perception-is-reality"},{"categories":["Development","Design","Job Queue"],"content":" Real World IssueMany years ago, I worked with a Medical Device Company. We had built a custom configurator, and for each Sales Order, we planned a production order for a Hearing Aid. Each hearing aid was custom made for the patient, and components were based off of answers from the configurator. Anyone who have worked with MRP and Production Orders in NAV/BC knows that that planning part can be rather cumbersome and time-consuming. The process we had was: Ear Mold was received in the morning from Currier User Scanned the inbound Tracking No. and selected Order Type (New vs Repair) Sales Order was created, and a label was printed. Ear Mold was placed in a tote and placed on conveyor Order Entry Person Scanned the Order Label. That opened the Sales Order Page, and order details was entered. Order Entry Person ‚ÄòReleased‚Äô the Sales Order. This resulted in Production Planning to take place. Once the Production Order was created, a Production Traveler report would print, and the order would go to production We had anywhere between 2,000 and 2,500 orders a day. It wasn‚Äôt long before we ended up with Deadlocks and users waiting for the Production Order Planning - and users would just sit a wait for up to two minutes, and soon enough: The System is Slow today! was a common complaint. We ended up inserting KPI records so we could find the culprits and to confirm or dispute the users‚Äô claims. After some initial optimization the system ran pretty stable. We still had deadlocks caused by the Production Planning and we still had Order Entry users sit and wait. ","date":"Monday, Jan 3, 2022","objectID":"/posts/performancevsexperience/:2:0","series":[],"tags":[],"title":"Performance vs User-Experience","uri":"/posts/performancevsexperience/#real-world-issue"},{"categories":["Development","Design","Job Queue"],"content":" How we solved the issue‚ÄúOutbound Warehouse Request‚Äù - No Really - In Standard NAV/BC the Release function creates a record in the Outbound Warehouse Request table, if the Location Code is set up for Warehouse. We realized that we didn‚Äôt have to actually complete the production planning. We just needed to inform a process that the order needed Production Order Planning and then have another process pick it up! We created a ‚ÄúSales Order Release Request‚Äù table. We then had the release function create an entry (after some rudimentary tests passed), and the user now pressed ‚ÄòRelease‚Äô and were ready for the next order. The process (from the users perspective) became Ear Mold was received in the morning from Currier User Scanned the inbound Tracking No. and selected Order Type (New vs Repair) Sales Order was created, and a label was printed. Ear Mold was placed in a tote and placed on conveyor Order Entry Person Scanned the Order Label. That opened the Sales Order Page, and order details was entered. Order Entry Person ‚ÄòReleased‚Äô the Sales Order. The NAS then took over and did: Production Planning. Once the Production Order was created, a Production Traveler report would print and the order would go to production The User EXPERIENCE was now that the system was super-fast The user was no longer waiting for the system! We then created a NAS (precursor to Job Queue) and it plowed through the requests at its leisure. An added benefit, was that the Production Planning was now faster, as it now handled one order at a time, and gone were the deadlocks. If I were to do this today, I would probably ‚Äújust‚Äù create a Job Queue and then create a Job Queue Entry for each Sales Order. The Job Queue and Job Queue Entry handles a lot on the plumbing we had to create back then. ","date":"Monday, Jan 3, 2022","objectID":"/posts/performancevsexperience/:3:0","series":[],"tags":[],"title":"Performance vs User-Experience","uri":"/posts/performancevsexperience/#how-we-solved-the-issue"},{"categories":["Development","Design","Job Queue"],"content":" Take-awaysThis experience taught me, that while You always want to optimize Your code, spending hours and hours on gaining a second might not always be the best approach. To me the User Experience is much more important! ","date":"Monday, Jan 3, 2022","objectID":"/posts/performancevsexperience/:4:0","series":[],"tags":[],"title":"Performance vs User-Experience","uri":"/posts/performancevsexperience/#take-aways"},{"categories":["Development","Design"],"content":" Why is Clean Code and Standards Important?In the last few years, I have spoken with developers that are new to BC. A lot of them have done lots of dotnet. Most of them all look at me confused when I talk to them about Development Standards - Especially when it comes to Variable Naming etc. I likewise look baffled when they don‚Äôt understand the importance of this. To me, the most important reason is: You will NOT be the last person to see that code. And while that was truer in the NAV world, where the code was saved in the Database, I still believe this to be true in Business Central. Only difference is that Your code will now be saved in a git repository, while the source code may be hidden in your .app file that You distribute. If You do not follow commonly agreed upon standards, you are ending up spending additional time while you maintain the code - especially if a co-worker needs to participate. As someone who have worked with NAV and BC for over 20 years, I have seen my share of code created by someone else - and some of my own for that matter - getting frustrated that I wasn‚Äôt able to skim the code due to inconsistent ways of writing the code. I used to work with a guy, who in every piece of code would have a variable Aux. Sometimes this variable was a Customer Table, other times an Integer, decimal ‚Ä¶ You get the idea. Fact was, trying to debug his code ALWAYS ment adding extra time to figure out what actually went on. ","date":"Friday, Dec 3, 2021","objectID":"/posts/clean-code/:1:0","series":[],"tags":[],"title":"Clean Code","uri":"/posts/clean-code/#why-is-clean-code-and-standards-important"},{"categories":["Development","Design"],"content":" Clean Code and Design Patterns isn‚Äôt a new thingThe first time I really heard about it was when I attended a session at NAVTechDays in 2014 when I heard someone say A Codeunit should only have one global function, and A function should not have more than 20 lines of code My first reaction was: ‚ÄúWhat have they been smoking?‚Äù It wasn‚Äôt until I ‚Äúgot home‚Äù and tried to implement some of these ideas at customer sites myself. I, to this day, still remember the implementation I worked on, where I created a Sales Post - Hook codeunit. Initially I thought: ‚ÄúThis is dumb - I am creating an extra object, just to transfer some fields from the Sales Line to the Item Journal Line, and from the Sales Header to the General Journal Line. But ‚ÄúThis is the way, now‚Äù so I gave it a chance. Lo and behold - a month or so later, the client wanted some additional fields, and I realized that, I no longer had to change Codeunit 80 - Sales - Post, but just changing ‚Äúmy‚Äù codeunit Sales Post - Hook! By creating the hook, I had encapsulated this modification, so they were easy to update and maintain! From then on, I fully embraced these design patterns, and I tried to educate the developers I work with to do the same. Granted it can be difficult to teach an old dog new tricks, but the team is slowly getting there. Just recently, I had a Developer do some code review on my code, and he said: it‚Äôs reads like you‚Äôre having a conversation with NAV and teaching it what needs to be done And this is exactly what I try to do. The code should really look like a table of content. ","date":"Friday, Dec 3, 2021","objectID":"/posts/clean-code/:2:0","series":[],"tags":[],"title":"Clean Code","uri":"/posts/clean-code/#clean-code-and-design-patterns-isnt-a-new-thing"},{"categories":["Development","Design"],"content":" Clean Code makes debugging and fixing code easierWe have all done code cloning, where we have repeated code inside a CASE statement (If you say you haven‚Äôt, you are lying!). I myself once was trying to debug some code that I wrote. The customer had reported back that under certain circumstances one piece of the code wasn‚Äôt executed. This code was written just like ‚Äúwe‚Äù always had, namely hundreds on lines inside one function. Trying to read all of the code, I finally decided to refactor and break the code into pieces. By moving all of the code to discrete functions, and then removing those blocks, it became obvious that I had forgotten to copy some code to that scenario. IF (\"Method Type\" IN [\"Method Type\"::Authorize, \"Method Type\"::\"Voice Authorize\", \"Method Type\"::\"Return Authorize\"]) AND (\"Transaction Status\" IN [\"Transaction Status\"::Declined,\"Transaction Status\"::Failed,\"Transaction Status\"::Error]) AND (\"Declined Card Action\" \u003c\u003e \"Declined Card Action\"::Nothing) THEN BEGIN Success := FALSE; MODIFY; OrgEFTTrans := Rec; CASE \"Declined Card Action\" OF \"Declined Card Action\"::\"Try Other Non-Expired Cards\" : Success := SubmitTransactionWithAlternateCards(OrgEFTTrans, AlternativeTran, FALSE); \"Declined Card Action\"::\"Extend Expired Card\" : Success := SubmitTransactionWithExtendedExpirationDate(OrgEFTTrans, AlternativeTran, CardWasAutoBlocked); \"Declined Card Action\"::\"Extend Expired Card; Then Try Other Non-Expired Cards\" : BEGIN Success := SubmitTransactionWithExtendedExpirationDate(OrgEFTTrans, AlternativeTran, CardWasAutoBlocked); IF NOT Success THEN Success := SubmitTransactionWithAlternateCards(OrgEFTTrans, AlternativeTran, FALSE); END; \"Declined Card Action\"::\"Extend Expired Card; Then Non-Expired Cards; Then Extend Other Expired Cards\" : BEGIN Success := SubmitTransactionWithExtendedExpirationDate(OrgEFTTrans, AlternativeTran, CardWasAutoBlocked); IF NOT Success THEN Success := SubmitTransactionWithAlternateCards(OrgEFTTrans, AlternativeTran, FALSE); IF NOT Success THEN Success := SubmitTransactionWithAlternateCards(OrgEFTTrans, AlternativeTran, TRUE); END; \"Declined Card Action\"::\"Try Other Non-Expired Cards;Extend Expired Card; Then Extend Other Expired Cards\" : BEGIN Success := SubmitTransactionWithAlternateCards(OrgEFTTrans, AlternativeTran, FALSE); IF NOT Success THEN Success := SubmitTransactionWithExtendedExpirationDate(OrgEFTTrans, AlternativeTran, CardWasAutoBlocked); IF NOT Success THEN Success := SubmitTransactionWithAlternateCards(OrgEFTTrans, AlternativeTran, TRUE); END; END; IF Success THEN Rec := AlternativeTran; COMMIT; END; I tend to stress to folks, that a Procedure should do ONE thing and ONE thing only - And the Procedure Name should tell You what it does. The added benefit is that there are no doubts as to what the INTENT of that code is. If something doesn‚Äôt work, and a function is called GetOutstandingItemSalesLines and the code looks like this: local procedure GetOutstandingItemSalesLines(SalesHeader : Record \"Sales Header\"; var SalesLine : SalesLine); begin SalesLine.SetRange(\"Document Type\", SalesHeader.\"Document Type\"); SalesLine.SetRange(\"Document No.\", SalesHeader.\"No.\"); SalesLine.SetRange(Type, SalesLine.Type::Item); SalesLine.Setfilter(\"Qty. Outstanding\", '%1',0); end; it is easy for anyone to understand that the filter SalesLine.Setfilter(\"Qty. Outstanding\", '%1',0); is incorrect - The procedure name shows the intent of retrieving outstanding sales lines. ","date":"Friday, Dec 3, 2021","objectID":"/posts/clean-code/:3:0","series":[],"tags":[],"title":"Clean Code","uri":"/posts/clean-code/#clean-code-makes-debugging-and-fixing-code-easier"},{"categories":["Development","Design"],"content":" What‚Äôs nextFollowing a Dynamics Con session ‚ÄúHow I Manage My Team for Product and Customer Development?‚Äù, Waldo told the audience that he had some standard his company follows, and he remined us, that there was a Design Pattern initiative from the NAV days, that had since been largely abandoned. Waldo felt that that was sad. I Immediately followed up, with a message to Waldo, saying I would love to partake in a community effort in bringing this back to life. After some time, Waldo reached out, and we now had a team of four - which after Microsoft caught wind of the effort was expanded with a Microsoft Team Member. https://alguidelines.dev is the result of this - And this is by no means complete, and we want YOU to take part of this as well. Participating is as easy as going to the github repository and start, or participate, in a Discussion. You are also encouraged to Create a Pull Request. This site is meant to be the ‚ÄòGenerally Agreed upon patterns and standards‚Äô, and having Microsoft involved, we hope this will be to where all developers are looking for best practices. If we all follow the same methods and standards, quite frankly, we all win. ","date":"Friday, Dec 3, 2021","objectID":"/posts/clean-code/:4:0","series":[],"tags":[],"title":"Clean Code","uri":"/posts/clean-code/#whats-next"},{"categories":["Development","Design"],"content":" For Your Viewing PleasureThe Nav TechDays sessions that started this for me : Waldo‚Äôs Session at Dynamics Con : ","date":"Friday, Dec 3, 2021","objectID":"/posts/clean-code/:5:0","series":[],"tags":[],"title":"Clean Code","uri":"/posts/clean-code/#for-your-viewing-pleasure"},{"categories":null,"content":" Henrik HelgesenBorn in a small town in Denmark in the middle of a snow storm in 1975. My first ‚ÄòReal‚Äô job out of school in 1997 was as a MIS/Production Planning Assistant-guy at a Furniture Manufacurer. They had recently implemented Navision 3.53 running on a IBM RISC/6000, and my job was to manage that, as well as doing minor in-house development. Little did I know, that thsi would be a beginning to a lifelong career in ERP and Navigator -\u003e Navision -\u003e Microsoft Dynamics 365 BC. ","date":"Tuesday, Nov 16, 2021","objectID":"/about/:0:1","series":null,"tags":null,"title":"About","uri":"/about/#henrik-helgesen"},{"categories":["General"],"content":" WelcomeThank You for visiting. This blog is primarily going have content pertaining to Microsoft Dynamics NAV and more Microsoft Dynamics 365 Business Central. I know that there are plenty of blogs out there on these subjects, but I hope I will be able to supplement some of them. I will also be journaling my work in migrating a heavely customized NAV2016 to Business Central SaaS. I‚Äôm sure that is going to cause lots of interesting issues and solutions. I will also try an document my OpenSource Business Central apps. Lastly: a shoutout to Jeremy Vyska America BC Developer living in Sweden ","date":"Monday, Nov 15, 2021","objectID":"/posts/welcome/:1:0","series":null,"tags":null,"title":"Welcome","uri":"/posts/welcome/#welcome"},{"categories":["General"],"content":" Behind the ScenesThis Blog is my first hugo site, hosted on github pages. so let‚Äôs see how that goes. ","date":"Monday, Nov 15, 2021","objectID":"/posts/welcome/:1:1","series":null,"tags":null,"title":"Welcome","uri":"/posts/welcome/#behind-the-scenes"}]